[{"C:\\CS\\referral\\src\\App.tsx":"1","C:\\CS\\referral\\src\\reportWebVitals.ts":"2","C:\\CS\\referral\\src\\components\\NavBar.tsx":"3","C:\\CS\\referral\\src\\screens\\Home.tsx":"4","C:\\CS\\referral\\src\\components\\SearchBar.tsx":"5"},{"size":390,"mtime":1609654568857,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1609636825443,"results":"8","hashOfConfig":"7"},{"size":3716,"mtime":1609654904055,"results":"9","hashOfConfig":"7"},{"size":2680,"mtime":1609684541658,"results":"10","hashOfConfig":"7"},{"size":1727,"mtime":1609683591320,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5aijt3",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CS\\referral\\src\\App.tsx",[],"C:\\CS\\referral\\src\\reportWebVitals.ts",[],"C:\\CS\\referral\\src\\components\\NavBar.tsx",[],"C:\\CS\\referral\\src\\screens\\Home.tsx",["23","24"],"import React from 'react';\r\n\r\n// screens and componets \r\nimport NavBar from '../components/NavBar';\r\nimport SearchBar from '../components/SearchBar'\r\n\r\n// antd\r\nimport OverPack from 'rc-scroll-anim/lib/ScrollOverPack';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport { enquireScreen } from 'enquire-js';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ninterface CardData {\r\n    image: string,\r\n    title: string,\r\n    content: string\r\n}\r\n\r\n\r\n\r\nconst RenderCards: React.FC<CardData[]> = (cardsData: CardData[]) => {\r\n\r\n    return (\r\n        <OverPack playScale={0.3} className='home-card-wrapper'>\r\n            <QueueAnim\r\n                key=\"queue\"\r\n                type=\"bottom\"\r\n                leaveReverse\r\n                interval={50}\r\n            >\r\n                <Row justify='space-between'>\r\n                    {cardsData.map((item: CardData, i: number) => (\r\n                        <Col md={6} xs={24} className='home-card-block' key={i.toString()}>\r\n                            <a className='home-card-block-group'>\r\n                                <img src={item.image} className='home-card-image' />\r\n                                <p className='home-card-title'>{item.title}</p>\r\n                                <p className='home-card-content'>{item.content}</p>\r\n                            </a>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n\r\n            </QueueAnim>\r\n        </OverPack>\r\n    )\r\n\r\n}\r\n\r\nconst Home: React.FC<Props> = (props: Props) => {\r\n    const [ isMobile, setIsMobile ] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        // responsive to mobile screen\r\n        enquireScreen((mobileState: boolean) => {\r\n            setIsMobile(mobileState);\r\n          });\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <NavBar \r\n                isMobile={isMobile}\r\n            />\r\n\r\n            <div className='home-content-wrapper'>\r\n                <SearchBar />\r\n\r\n                {RenderCards(cardData)}\r\n\r\n            </div>\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst cardData = [\r\n    {\r\n        image: 'https://gw.alipayobjects.com/zos/basement_prod/e339fc34-b022-4cde-9607-675ca9e05231.svg',\r\n        title: 'card1',\r\n        content: 'jdpoaijdpweajdiawj'\r\n    },\r\n    {\r\n        image: 'https://gw.alipayobjects.com/zos/basement_prod/e339fc34-b022-4cde-9607-675ca9e05231.svg',\r\n        title: 'card1',\r\n        content: 'jdpoaijdpweajdiawj'\r\n    },\r\n    {\r\n        image: 'https://gw.alipayobjects.com/zos/basement_prod/e339fc34-b022-4cde-9607-675ca9e05231.svg',\r\n        title: 'card1',\r\n        content: 'jdpoaijdpweajdiawj'\r\n    }\r\n]\r\n\r\nexport default Home;","C:\\CS\\referral\\src\\components\\SearchBar.tsx",[],{"ruleId":"25","severity":1,"message":"26","line":39,"column":29,"nodeType":"27","endLine":39,"endColumn":66},{"ruleId":"28","severity":1,"message":"29","line":40,"column":33,"nodeType":"27","endLine":40,"endColumn":85},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]